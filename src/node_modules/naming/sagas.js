import { select, call, apply } from 'redux-saga/effects';

import { NamingError } from "error";

let callId = 1;

function* callNaming(method, ...params) {
    const location = yield select(state => state.naming.location);
    let response;
    try {
        response = yield call(fetch, location, {
            method: "POST",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                jsonrpc: "2.0",
                id: callId++,
                method,
                params
            })
        });
    } catch (e) {
        throw new NamingError(e);
    }
    if (!response.ok) {
        throw new NamingError("Server returned error status");
    }
    return (yield apply(response, response.json)).result;
}

export function* getCurrentSaga(name, generation) {
    return yield call(callNaming, "getCurrent", name, generation);
}

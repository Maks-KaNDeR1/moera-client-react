import schema from "api/schema";

export const Result = schema({
    type: "object",
    properties: {
        "errorCode": {
            type: "string"
        },
        "message": {
            type: "string",
            default: ""
        }
    },
    additionalProperties: false,
    required: ["errorCode", "message"]
});

export const WhoAmI = schema({
    type: "object",
    properties: {
        "registeredName": {
            type: "string"
        },
        "registeredNameGeneration": {
            type: "integer"
        }
    },
    additionalProperties: false,
});

export const ProfileInfo = schema({
    type: "object",
    properties: {
        "fullName": {
            type: "string"
        },
        "gender": {
            type: "string"
        },
        "email": {
            type: "string",
            anyOf: [{
                const: ""
            }, {
                format: "email"
            }]
        },
        "operations": {
            type: "object",
            properties: {
                "edit": {
                    type: "array",
                    items: {
                        type: "string"
                    }
                }
            },
            additionalProperties: false,
        }
    },
    additionalProperties: false,
});

export const TokenCreated = schema({
    type: "object",
    properties: {
        "token": {
            type: "string"
        },
        "permissions": {
            type: "array",
            items: {
                type: "string"
            },
            default: []
        }
    },
    additionalProperties: false,
    required: ["token", "permissions"]
});

export const RegisteredNameInfo = schema({
    type: "object",
    properties: {
        "name": {
            type: "string"
        },
        "generation": {
            type: "integer"
        },
        "operationStatus": {
            type: "string"
        },
        "operationStatusUpdated": {
            type: "integer"
        },
        "operationErrorCode": {
            type: "string"
        },
        "operationErrorMessage": {
            type: "string"
        },
        "operations": {
            type: "object",
            properties: {
                "manage": {
                    type: "array",
                    items: {
                        type: "string"
                    }
                }
            },
            additionalProperties: false,
        }
    },
    additionalProperties: false,
});

export const RegisteredNameSecret = schema({
    type: "object",
    properties: {
        "name": {
            type: "string"
        },
        "mnemonic": {
            type: "array",
            items: {
                type: "string"
            },
            minItems: 24,
            maxItems: 24
        },
        "secret": {
            type: "string"
        }
    },
    additionalProperties: false,
});

const PostingInfoType = {
    type: "object",
    properties: {
        "id": {
            type: "string"
        },
        "ownerName": {
            type: "string"
        },
        "ownerGeneration": {
            type: "integer"
        },
        "bodyPreviewHtml": {
            type: "string"
        },
        "bodySrc": {
            type: "string"
        },
        "bodySrcFormat": {
            type: "string"
        },
        "bodyHtml": {
            type: "string"
        },
        "heading": {
            type: "string"
        },
        "createdAt": {
            type: "integer"
        },
        "publishedAt": {
            type: "integer"
        },
        "signature": {
            type: "string"
        },
        "moment": {
            type: "integer"
        }
    },
    additionalProperties: false,
};

export const PostingInfo = schema(PostingInfoType);

export const TimelineInfo = schema({
    type: "object",
    properties: {
        "operations": {
            type: "object",
            properties: {
                "add": {
                    type: "array",
                    items: {
                        type: "string"
                    }
                }
            },
            additionalProperties: false,
        }
    },
    additionalProperties: false,
});

export const TimelineSliceInfo = schema({
    type: "object",
    properties: {
        "before": {
            type: "integer"
        },
        "after": {
            type: "integer"
        },
        "postings": {
            type: "array",
            items: PostingInfoType
        },
    },
    additionalProperties: false,
});

const ChoiceType = {
    type: "object",
    properties: {
        "value": {
            type: "string"
        },
        "title": {
            type: "string"
        }
    },
    additionalProperties: false,
};

export const PostingFeatures = schema({
    type: "object",
    properties: {
        "sourceFormats": {
            type: "array",
            items: ChoiceType
        }
    },
    additionalProperties: false,
});

import schm from 'schm';
import { apply, call, select } from 'redux-saga/effects';

import { HomeError } from "error";
import * as NodeApi from "node/api";

function* callHome(location, schema = null) {
    const rootApi = yield select(state => state.home.root.api);
    let response;
    try {
        response = yield call(fetch, rootApi + location);
    } catch (e) {
        throw new HomeError(e);
    }
    if (!response.ok) {
        throw new HomeError("Server returned error status");
    }
    const data = yield apply(response, response.json);
    if (!schema) {
        return data;
    }
    try {
        return yield call(schm.validate, data, schema);
    } catch (errors) {
        const desc = errors.map(({message}) => message).join(", ");
        throw new HomeError(location + " returned incorrect response: " + desc);
    }
}

export function* getWhoAmI() {
    return yield call(callHome, "/whoami", NodeApi.WhoAmI);
}

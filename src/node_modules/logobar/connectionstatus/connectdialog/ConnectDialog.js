import React from 'react';
import { connect } from 'react-redux';
import { withFormik, Form, Field } from 'formik';

import { cancelConnectDialog, connectToHome } from "logobar/connectionstatus/connectdialog/actions";

class ConnectDialog extends React.Component {

    componentDidUpdate(prevProps, prevState, snapshot) {
        if (this.props.show !== prevProps.show && this.props.show) {
            this.props.resetForm();
        }
    }

    render() {
        const {show, cancelConnectDialog} = this.props;

        if (!show) {
            return null;
        }

        return (
            <Form>
                <div className="modal-backdrop show" />
                <div className="modal show" style={{display: "block"}} onClick={cancelConnectDialog}>
                    <div className="modal-dialog modal-dialog-centered" onClick={(e) => e.stopPropagation()}>
                        <div className="modal-content">
                            <div className="modal-header">
                                <h4 className="modal-title">Connect to home</h4>
                                <button type="button" className="close" onClick={cancelConnectDialog}>&times;</button>
                            </div>
                            <div className="modal-body">
                                <div className="form-group">
                                    <label htmlFor="location">Node URL</label>
                                    <Field id="location" type="text" className="form-control" name="location"/>
                                </div>
                                <div className="form-group">
                                    <label htmlFor="login">Login</label>
                                    <Field id="login" type="text" className="form-control" name="login"/>
                                </div>
                                <div className="form-group">
                                    <label htmlFor="password">Password</label>
                                    <Field id="password" type="password" className="form-control" name="password"/>
                                </div>
                            </div>
                            <div className="modal-footer">
                                <button type="button" className="btn btn-secondary" onClick={cancelConnectDialog}>
                                    Cancel
                                </button>
                                <button type="submit" className="btn btn-primary">
                                    Connect
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </Form>
        );
    }

}

const connectDialogLogic = {

    mapPropsToValues(props) {
        return {
            location: props.location,
            login: props.login,
            password: ""
        }
    },

    handleSubmit(values, formik) {
        formik.props.connectToHome(values.location, values.login, values.password);
        formik.setSubmitting(false);
    }

};

export default connect(
    (state) => state.connectDialog,
    { cancelConnectDialog, connectToHome }
)(withFormik(connectDialogLogic)(ConnectDialog));

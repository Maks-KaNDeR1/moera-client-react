import React from 'react';
import PropType from 'prop-types';
import { Field } from 'formik'
import cx from 'classnames';

export class InputField extends React.PureComponent {

    static propTypes = {
        name: PropType.string,
        title: PropType.string,
        autoFocus: PropType.bool
    };

    constructor(props) {
        super(props);
        this.inputDom = null;
    }

    componentDidMount() {
        if (this.props.autoFocus && this.inputDom) {
            this.inputDom.focus();
        }
    }

    render() {
        const {name, title} = this.props;

        return (
            <div className="form-group">
                {title && <label htmlFor={name}>{title}</label>}
                <Field name={name}>
                    {({field, form}) => {
                        const touched = form.touched[field.name];
                        const error = form.errors[field.name];
                        return (
                            <>
                                <input
                                    {...field}
                                    id={name}
                                    type={name !== "password" ? "text" : "password"}
                                    className={cx([
                                        "form-control", {
                                            "is-valid": touched && !error,
                                            "is-invalid": touched && error,
                                        }])}
                                    ref={dom => {this.inputDom = dom}}
                                />
                                {touched && error && <div className="invalid-feedback">{error}</div>}
                            </>
                        );
                    }}
                </Field>
            </div>
        );
    }

}

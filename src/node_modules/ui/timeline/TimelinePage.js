import React from 'react';
import { connect } from 'react-redux';

import { Page } from "ui/page/Page";
import { Loading } from "ui/control";
import Posting from "ui/timeline/Posting";
import { timelinePastSliceLoad } from "state/timeline/actions";

class TimelinePage extends React.Component {

    constructor(props) {
        super(props);
        this.observeSentinelPast = this.observeSentinelPast.bind(this);
        this.loadPast = this.loadPast.bind(this);
        this.observerPast = new IntersectionObserver(this.loadPast, {rootMargin: "0% 0% 25% 0%"});
    }

    observeSentinelPast(sentinel) {
        if (sentinel == null) {
            this.observerPast.disconnect();
        } else if (this.props.after > 0) {
            this.observerPast.observe(sentinel);
        }
    }

    loadPast() {
        if (this.props.loadingPast || this.props.after <= 0) {
            return;
        }
        this.props.timelinePastSliceLoad();
    }

    render() {
        const {loadingPast, postings} = this.props;
        return (
            <Page>
                <h2>Timeline</h2>
                {postings.map(posting => <Posting key={posting.moment} posting={posting} />)}
                <div ref={this.observeSentinelPast} />
                <Loading active={loadingPast} />
            </Page>
        );
    }
}

export default connect(
    state => ({
        ...state.timeline,
    }),
    { timelinePastSliceLoad }
)(TimelinePage);

import React from 'react';
import { connect } from 'react-redux';

import { Loading, ModalDialog, NodeName, Twemoji } from "ui/control";
import { closeReactionsDialog } from "state/reactionsdialog/actions";
import { getReactionsDialogRemainingCount } from "state/reactionsdialog/selectors";
import "./ReactionsDialog.css";

const TotalsTabsImpl = ({loading, loaded, total, emojis}) => (
    <>
        {loaded &&
            <div className="total-tabs">
                <div className="total active">All {total}</div>
                {emojis.map(rt => <div className="total"><Twemoji code={rt.emoji}/>{" "}{rt.total}</div>)}
            </div>
        }
        <Loading active={loading}/>
    </>
);

const TotalsTabs = connect(
    state => ({
        ...state.reactionsDialog.totals
    })
)(TotalsTabsImpl);

const ReactionsDialog = ({show, remaining, reactionsLoading, reactions, closeReactionsDialog}) => {
    if (!show) {
        return null;
    }

    return (
        <ModalDialog onClose={closeReactionsDialog}>
            <div className="reactions-dialog modal-body">
                <div className="totals clearfix">
                    <TotalsTabs/>
                    <button type="button" className="close" onClick={closeReactionsDialog}>&times;</button>
                </div>
                <div className="items">
                    {reactions.map(r =>
                        <div className="item" key={r.moment}>
                            <div className="emoji"><Twemoji code={r.emoji}/></div>
                            <div className="owner-name"><NodeName name={r.ownerName}/></div>
                        </div>
                    )}
                </div>
                {remaining > 0 && !reactionsLoading && <div className="more">{remaining} more</div>}
                <Loading active={reactionsLoading}/>
            </div>
        </ModalDialog>
    );
};

export default connect(
    state => ({
        show: state.reactionsDialog.show,
        remaining: getReactionsDialogRemainingCount(state),
        reactionsLoading: state.reactionsDialog.reactions.loading,
        reactions: state.reactionsDialog.reactions.items
    }),
    { closeReactionsDialog }
)(ReactionsDialog);

import React from 'react';
import { connect } from 'react-redux';

import { Button, Loading, Popover, RegisteredName } from "ui/control";
import HomeButton from "ui/mainmenu/connectionstatus/HomeButton";
import SettingsButton from "ui/mainmenu/connectionstatus/SettingsButton";
import ConnectDialog from "ui/mainmenu/connectionstatus/connectdialog/ConnectDialog";
import { openConnectDialog } from "state/connectdialog/actions";
import { disconnectFromHome } from "state/home/actions";
import { isConnectedToHome } from "state/home/selectors";
import "./ConnectionStatus.css";

const ConnectionStatus = ({connecting,  connected, location, login, owner, openConnectDialog, disconnectFromHome}) => (
    <>
        <div id="connection-status">{
            connecting ?
                <>Connecting <Loading /></>
            :
                (!connected ?
                    <>
                        Not connected to home
                        <Button variant="success" size="sm" onClick={openConnectDialog}>Connect</Button>
                    </>
                :
                    <>
                        <HomeButton />
                        <SettingsButton />
                        <Popover icon="network-wired" textClassName="connection-button">
                            Connected to <a href={location}>{location}</a> as <b>{login}</b>
                            {owner.name && <><br />Signing as <RegisteredName {...owner} /></>}
                        </Popover>
                        <Button variant="outline-primary" size="sm" onClick={() => disconnectFromHome(location, login)}>
                            Disconnect
                        </Button>
                    </>
            )
        }</div>
        <ConnectDialog />
    </>
);

export default connect(
    state => ({
        connecting: state.home.connecting,
        connected: isConnectedToHome(state),
        location: state.home.root.location,
        login: state.home.login,
        owner: state.home.owner
    }),
    { openConnectDialog, disconnectFromHome }
)(ConnectionStatus);

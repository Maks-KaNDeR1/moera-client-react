import React from 'react';
import { connect } from 'react-redux';
import { Form, withFormik } from 'formik';
import * as yup from 'yup';

import { Button, InputField, Loading, ModalDialog } from "ui/control";
import { registeredNameUpdateDialogCancel } from "state/registeredname/actions";
import * as Rules from "api/naming/rules";
import { range } from "util/util";
import "./RegisteredNameUpdateDialog.css";

const Column = ({start, end}) => (
    <div className="col-sm-4">
        <ol start={start + 1}>
            {range(end - start).map(index => (
                <li key={index}><InputField name={`mnemonic.${start + index}`} className="mnemonic-input" /></li>
            ))}
        </ol>
    </div>
);

const RegisteredNameUpdateDialog = ({show, showChangeName, updating, registeredNameUpdateDialogCancel}) => {
    if (!show) {
        return null;
    }

    return (
        <ModalDialog title={showChangeName ? "Change Registered Name" : "Prolong RegisteredName"} size="lg"
                     onClose={registeredNameUpdateDialogCancel}>
            <Form>
                <div className="modal-body">
                    {showChangeName &&
                        <div className="row">
                            <div className="col-sm-4">
                                <InputField name="name" title="Name" autoFocus />
                            </div>
                            <div className="col-sm-1">
                                <InputField name="generation" title="Generation" />
                            </div>
                        </div>}
                    <h5 className="mnemonic-title">Secret Words</h5>
                    <div className="row">
                        <Column start={0} end={8} />
                        <Column start={8} end={16} />
                        <Column start={16} end={24} />
                    </div>
                </div>
                <div className="modal-footer">
                    <Loading active={updating} />
                    <Button variant="secondary" onClick={registeredNameUpdateDialogCancel}
                            disabled={updating}>Cancel</Button>
                    <Button variant="primary" type="submit" disabled={updating}>Register</Button>
                </div>
            </Form>
        </ModalDialog>
    );
};

const registeredNameUpdateDialogLogic = {

    mapPropsToValues(props) {
        return {
            name: ""
        }
    },

    validationSchema: yup.object().shape({
        name: yup.string().trim().required("Must not be empty").max(Rules.NAME_MAX_LENGTH)
            .test("is-allowed", "Name is not allowed", Rules.isNameValid)
    }),

    handleSubmit(values, formik) {
        // formik.props.registerName(values.name.trim(), formik);
        formik.setSubmitting(false);
    }

};

export default connect(
    state => ({
        show: state.registeredName.showingUpdateDialog,
        showChangeName: state.registeredName.showingChangeName,
        updating: state.registeredName.updating
    }),
    { registeredNameUpdateDialogCancel }
)(withFormik(registeredNameUpdateDialogLogic)(RegisteredNameUpdateDialog));

import React from 'react';
import { connect } from 'react-redux';
import { Form, withFormik } from 'formik';
import * as yup from 'yup';

import { Button, InputField, ModalDialog } from "ui/control";
import { registerNewNameCancel } from "state/registeredname/actions";

class RegisterNameDialog extends React.Component {

    /*componentDidUpdate(prevProps, prevState, snapshot) {
        if (this.props.show !== prevProps.show && this.props.show) {
            this.props.resetForm();
        }
    }*/

    render() {
        const {show, registerNewNameCancel} = this.props;

        if (!show) {
            return null;
        }

        return (
            <ModalDialog title="Register a New Name" onClose={registerNewNameCancel}>
                <Form>
                    <div className="modal-body">
                        <InputField name="name" title="Name" autoFocus />
                    </div>
                    <div className="modal-footer">
                        <Button variant="secondary" onClick={registerNewNameCancel}>Cancel</Button>
                        <Button variant="primary" type="submit">Register</Button>
                    </div>
                </Form>
            </ModalDialog>
        );
    }

}

const registerNameDialogLogic = {

    mapPropsToValues(props) {
        return {
            name: ""
        }
    },

    validationSchema: yup.object().shape({
        name: yup.string().trim().required("Must not be empty")
    }),

    handleSubmit(values, formik) {
        // formik.props.connectToHome(values.location.trim(), values.assign, values.login.trim(), values.password);
        formik.setSubmitting(false);
    }

};

export default connect(
    state => ({
        show: state.registeredName.showingRegisterDialog
    }),
    { registerNewNameCancel/*, connectToHome*/ }
)(withFormik(registerNameDialogLogic)(RegisterNameDialog));

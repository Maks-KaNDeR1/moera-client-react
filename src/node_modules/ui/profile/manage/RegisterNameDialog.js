import React from 'react';
import { connect } from 'react-redux';
import { Form, withFormik } from 'formik';
import * as yup from 'yup';

import { Button, InputField, ModalDialog } from "ui/control";
import { registerName, registerNameDialogCancel } from "state/registeredname/actions";

const RegisterNameDialog = ({show, registerNameDialogCancel}) => {
    if (!show) {
        return null;
    }

    return (
        <ModalDialog title="Register a New Name" onClose={registerNameDialogCancel}>
            <Form>
                <div className="modal-body">
                    <InputField name="name" title="Name" autoFocus />
                </div>
                <div className="modal-footer">
                    <Button variant="secondary" onClick={registerNameDialogCancel}>Cancel</Button>
                    <Button variant="primary" type="submit">Register</Button>
                </div>
            </Form>
        </ModalDialog>
    );
};

const registerNameDialogLogic = {

    mapPropsToValues(props) {
        return {
            name: ""
        }
    },

    validationSchema: yup.object().shape({
        name: yup.string().trim().required("Must not be empty")
    }),

    handleSubmit(values, formik) {
        formik.props.registerName(values.name.trim(), formik);
        formik.setSubmitting(false);
    }

};

export default connect(
    state => ({
        show: state.registeredName.showingRegisterDialog
    }),
    { registerNameDialogCancel, registerName }
)(withFormik(registerNameDialogLogic)(RegisterNameDialog));

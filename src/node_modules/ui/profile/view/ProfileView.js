import React from 'react';
import PropType from 'prop-types';
import { connect } from 'react-redux';

import { Button, Loading, RegisteredName } from "ui/control";
import { profileEdit, profileLoad } from "state/profile/actions";
import { isPermitted } from "util/permissions";
import { getHomePermissions } from "state/home/selectors";

const EditButtonImpl = ({profileEdit}) => (
    <Button variant="outline-primary" size="sm" style={{marginLeft: "1rem"}} onClick={profileEdit}>
        Edit
    </Button>
);

const EditButton = connect(
    null,
    {profileEdit}
)(EditButtonImpl);

const ProfileLine = ({title, children, visible = true}) => (
    visible &&
        <>
            <dt className="col-sm-2">{title}</dt>
            <dd className="col-sm-10">{children}</dd>
        </>
);

ProfileLine.propTypes = {
    title: PropType.string,
    visible: PropType.bool
};

class ProfileView extends React.PureComponent {

    static propTypes = {
        loading: PropType.bool,
        registeredName: PropType.string,
        registeredNameGeneration: PropType.number,
        fullName: PropType.string,
        gender: PropType.string
    };

    componentDidMount() {
        this.props.profileLoad();
    }

    render() {
        const {
            loading,
            registeredName,
            registeredNameGeneration,
            fullName,
            gender,
            editable} = this.props;

        return (
            <>
                <h2>
                    Profile <Loading active={loading} />
                    {editable && <EditButton/>}
                </h2>
                <dl className="row">
                    <ProfileLine title="Registered name">
                        <RegisteredName name={registeredName} generation={registeredNameGeneration}/>
                    </ProfileLine>
                    <ProfileLine title="Full name" visible={!!fullName}>
                        {fullName}
                    </ProfileLine>
                    <ProfileLine title="Gender" visible={!!gender}>
                        {gender}
                    </ProfileLine>
                </dl>
            </>
        );
    }

}

export default connect(
    (state) => ({
        ...state.profile,
        editable: !state.profile.loading
            && isPermitted("edit", state.profile.operations, getHomePermissions(state), state)
    }),
    { profileLoad }
)(ProfileView);

import React from 'react';
import { connect } from 'react-redux';
import { Client } from '@stomp/stompjs';

import { messageBox } from "state/messagebox/actions";

class Events extends React.Component {

    constructor(props) {
        super(props);

        this.stomp = null;
        this.onConnect = this.onConnect.bind(this);
        this.onMessage = this.onMessage.bind(this);
    }

    componentDidMount() {
        this._connect();
    }

    componentDidUpdate(prevProps, prevState, snapshot) {
        if (prevProps.homeEvents !== this.props.homeEvents) {
            this._disconnect();
            this._connect();
        }
    }

    _connect() {
        const {homeEvents} = this.props;

        if (homeEvents == null) {
            return;
        }
        this.stomp = new Client({
            brokerURL: homeEvents,
            onConnect: this.onConnect
        });
        this.stomp.activate();
    }

    _disconnect() {
        if (this.stomp != null) {
            this.stomp.deactivate();
            this.stomp = null;
        }
    }

    onConnect() {
        this.stomp.subscribe("/user/queue", this.onMessage);
    }

    onMessage(message) {
        this.props.messageBox("Event: " + message.body);
    }

    render() {
        return null;
    }

}

export default connect(
    state => ({
        homeEvents: state.home.root.events
    }),
    { messageBox }
)(Events);

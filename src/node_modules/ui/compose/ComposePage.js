import React from 'react';
import { connect } from 'react-redux';
import { Form, withFormik } from 'formik';
import * as yup from 'yup';

import { Page } from "ui/page/Page";
import { Button, Loading, SelectField, TextField } from "ui/control";
import { composePost } from "state/compose/actions";

const ComposePage = ({loadingFeatures, sourceFormats, posting}) => (
    <Page>
        <h2>New Post <Loading active={loadingFeatures} /></h2>
        <br />
        <Form>
            <SelectField name="bodyFormat" col="col-md-2 pl-0" size="sm" choices={sourceFormats} anyValue />
            <TextField name="body" anyValue autoFocus />
            <Button variant="primary" block type="submit" disabled={posting}>Post</Button>
            <Loading active={posting} />
        </Form>
    </Page>
);

const composePageLogic = {

    mapPropsToValues(props) {
        return {
            body: props.body || ""
        }
    },

    validationSchema: yup.object().shape({
        body: yup.string().trim().required("Must not be empty")
    }),

    handleSubmit(values, formik) {
        formik.props.composePost({
            bodySrc: values.body.trim()
        });
        formik.setSubmitting(false);
    }

};

export default connect(
    state => ({
        loadingFeatures: state.compose.loadingFeatures,
        sourceFormats: state.compose.sourceFormats,
        posting: state.compose.posting
    }),
    {composePost}
)(withFormik(composePageLogic)(ComposePage));

import {
    CONNECT_TO_HOME,
    CONNECTED_TO_HOME,
    CONNECTION_TO_HOME_FAILED,
    RESTORE_CONNECTION_TO_HOME,
    DISCONNECT_FROM_HOME,
    HOME_OWNER_SET,
    HOME_OWNER_VERIFIED
} from "state/home/actions";

const initialState = {
    connecting: false,
    root: {
        location: null,
        page: null,
        api: null
    },
    login: null,
    owner: {
        name: null,
        generation: 0,
        latest: false,
        verified: false,
        correct: false
    }
};

export default (state = initialState, action) => {
    switch (action.type) {
        case CONNECT_TO_HOME:
            return {
                ...state,
                connecting: true
            };

        case CONNECTION_TO_HOME_FAILED:
            return {
                ...state,
                connecting: false
            };

        case CONNECTED_TO_HOME:
        case RESTORE_CONNECTION_TO_HOME:
            return {
                ...state,
                connecting: false,
                root: {
                    location: action.payload.location,
                    page: action.payload.location + "/moera",
                    api: action.payload.location + "/moera/api",
                },
                login: action.payload.login
            };

        case DISCONNECT_FROM_HOME:
            return initialState;

        case HOME_OWNER_SET:
            return {
                ...state,
                owner: {
                    ...state.owner,
                    ...action.payload,
                    verified: false
                }
            };

        case HOME_OWNER_VERIFIED:
            if (state.owner.name === action.payload.name) {
                return {
                    ...state,
                    owner: {
                        ...state.owner,
                        ...action.payload,
                        verified: true
                    }
                };
            }
            return state;

        default:
            return state;
    }
}

import { call, put, select } from 'redux-saga/effects';

import { Node } from "api";
import { timelineFutureSliceSet, timelinePastSliceLoadFailed, timelinePastSliceSet } from "state/timeline/actions";
import { errorThrown } from "state/error/actions";

export function* timelinePastSliceLoadSaga() {
    try {
        const before = yield select(state => state.timeline.after);
        const data = yield call(Node.getTimelineSlice, null, before, 20);
        yield put(timelinePastSliceSet(data.postings, data.before, data.after));
    } catch (e) {
        yield put(timelinePastSliceLoadFailed());
        yield put(errorThrown(e));
    }
}

export function* timelineFutureSliceLoadSaga() {
    try {
        const after = yield select(state => state.timeline.before);
        const data = yield call(Node.getTimelineSlice, after, null, 20);
        yield put(timelineFutureSliceSet(data.postings, data.before, data.after));
    } catch (e) {
        yield put(timelinePastSliceLoadFailed());
        yield put(errorThrown(e));
    }
}

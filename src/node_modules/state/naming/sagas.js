import { call, put } from "@redux-saga/core/effects";
import { Naming, RegisteredName } from "api";
import { errorThrown } from "state/error/actions";
import { namingNameLoaded, namingNameLoadFailed } from "state/naming/actions";

export function* namingNameLoadSaga(action) {
    try {
        const {name, generation} = RegisteredName.parse(action.payload.name);
        const data = yield call(Naming.getCurrent, name, generation);
        const latest = !!(data && data.latest);
        const nodeUri = data ? data.nodeUri : null;
        yield put(namingNameLoaded(action.payload.name, latest, nodeUri));
    } catch (e) {
        yield put(namingNameLoadFailed(action.payload.name));
        yield put(errorThrown(e));
    }
}

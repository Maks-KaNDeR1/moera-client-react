import { trigger } from "state/trigger";
import { CONNECTED_TO_HOME, DISCONNECT_FROM_HOME } from "state/home/actions";
import { GO_TO_PAGE } from "state/navigation/actions";
import { isAtProfilePage } from "state/navigation/selectors";
import { inverse } from "util/util";
import { isRegisteredNameOperationPending, isRegisteredNameToBeLoaded } from "state/registeredname/selectors";
import { registeredNameLoad, registeredNameUnset } from "state/registeredname/actions";
import { PULSE_10MIN, PULSE_1MIN } from "state/pulse/actions";

export default [
    trigger(GO_TO_PAGE, state => isAtProfilePage(state) && isRegisteredNameToBeLoaded(state), registeredNameLoad),
    trigger([CONNECTED_TO_HOME, DISCONNECT_FROM_HOME], isAtProfilePage, registeredNameLoad),
    trigger([CONNECTED_TO_HOME, DISCONNECT_FROM_HOME], inverse(isAtProfilePage), registeredNameUnset),
    trigger(PULSE_1MIN, state => isRegisteredNameOperationPending(state) && isAtProfilePage(state), registeredNameLoad),
    trigger(PULSE_1MIN, state => isRegisteredNameOperationPending(state) && !isAtProfilePage(state), registeredNameUnset),
    trigger(PULSE_10MIN, state => !isRegisteredNameOperationPending(state) && isAtProfilePage(state), registeredNameLoad),
    trigger(PULSE_10MIN, state => !isRegisteredNameOperationPending(state) && !isAtProfilePage(state), registeredNameUnset),
];

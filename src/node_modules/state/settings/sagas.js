import { call, put, select } from '@redux-saga/core/effects';

import { errorThrown } from "state/error/actions";
import { Node } from "api";
import {
    settingsNodeMetaLoaded,
    settingsNodeMetaLoadFailed,
    settingsNodeValuesLoaded,
    settingsNodeValuesLoadFailed
} from "state/settings/actions";
import { isConnectedToHome } from "state/home/selectors";

export function* settingsNodeValuesLoadSaga() {
    if (!(yield select(isConnectedToHome))) {
        yield put(settingsNodeValuesLoaded([]));
        return;
    }
    try {
        const data = yield call(Node.getNodeSettings);
        yield put(settingsNodeValuesLoaded(data));
    } catch (e) {
        yield put(settingsNodeValuesLoadFailed());
        yield put(errorThrown(e));
    }
}

export function* settingsNodeMetaLoadSaga() {
    if (!(yield select(isConnectedToHome))) {
        yield put(settingsNodeMetaLoaded([]));
        return;
    }
    try {
        const data = yield call(Node.getNodeSettingsMetadata);
        yield put(settingsNodeMetaLoaded(data));
    } catch (e) {
        yield put(settingsNodeMetaLoadFailed());
        yield put(errorThrown(e));
    }
}

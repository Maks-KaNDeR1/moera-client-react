import { conj, trigger } from "state/trigger";
import { isAtSettingsPage } from "state/navigation/selectors";
import {
    isAtSettingsClientTab,
    isAtSettingsNodeTab,
    isSettingsClientValuesToBeLoaded,
    isSettingsNodeMetaToBeLoaded,
    isSettingsNodeValuesToBeLoaded
} from "state/settings/selectors";
import {
    SETTINGS_GO_TO_TAB,
    settingsClientValuesLoad,
    settingsNodeMetaLoad,
    settingsNodeValuesLoad
} from "state/settings/actions";
import { CONNECTED_TO_HOME, DISCONNECT_FROM_HOME } from "state/home/actions";
import { updateLocation } from "state/navigation/actions";

export default [
    trigger(
        SETTINGS_GO_TO_TAB,
        conj(isAtSettingsNodeTab, isSettingsNodeValuesToBeLoaded),
        settingsNodeValuesLoad
    ),
    trigger(
        SETTINGS_GO_TO_TAB,
        conj(isAtSettingsNodeTab, isSettingsNodeMetaToBeLoaded),
        settingsNodeMetaLoad
    ),
    trigger(
        [CONNECTED_TO_HOME, DISCONNECT_FROM_HOME],
        conj(isAtSettingsPage, isAtSettingsNodeTab),
        settingsNodeValuesLoad
    ),
    trigger(
        [CONNECTED_TO_HOME, DISCONNECT_FROM_HOME],
        conj(isAtSettingsPage, isAtSettingsNodeTab),
        settingsNodeMetaLoad
    ),
    trigger(
        SETTINGS_GO_TO_TAB,
        conj(isAtSettingsClientTab, isSettingsClientValuesToBeLoaded),
        settingsClientValuesLoad
    ),
    trigger(
        [CONNECTED_TO_HOME, DISCONNECT_FROM_HOME],
        conj(isAtSettingsPage, isAtSettingsClientTab),
        settingsClientValuesLoad
    ),
    trigger(SETTINGS_GO_TO_TAB, true, updateLocation)
];

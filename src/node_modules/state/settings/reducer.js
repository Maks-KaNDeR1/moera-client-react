import immutable from 'object-path-immutable';

import {
    SETTINGS_NODE_VALUES_LOAD,
    SETTINGS_NODE_VALUES_LOAD_FAILED,
    SETTINGS_NODE_VALUES_LOADED
} from "state/settings/actions";

const initialState = {
    tab: "node",
    node: {
        loadingValues: false,
        loadedValues: false,
        values: [], // FIXME should be map
        loadingMeta: false,
        loadedMeta: false,
        meta: {}
    }
};

export default (state = initialState, action) => {
    switch (action.type) {
        case SETTINGS_NODE_VALUES_LOAD:
            return immutable(state).set("node.loadingValues", true).value();

        case SETTINGS_NODE_VALUES_LOADED:
            return immutable(state)
                .set("node.loadingValues", false)
                .set("node.loadedValues", true)
                .set("node.values", action.payload.settings)
                .value();

        case SETTINGS_NODE_VALUES_LOAD_FAILED:
            return immutable(state).set("node.loadingValues", false).value();

        default:
            return state;
    }
}

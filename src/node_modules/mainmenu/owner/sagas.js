import { select, call, put } from 'redux-saga/effects';

import { errorThrown } from "error/actions";
import { getCurrentSaga } from "naming/sagas";
import { ownerSet, ownerVerified } from "mainmenu/owner/actions";
import { getProfileSaga } from "node/sagas";

export function* ownerLoadSaga() {
    const {rootApi, rootPage} = yield select(state => ({
        rootApi: state.root.api,
        rootPage:  state.root.page}));
    try {
        const data = yield call(getProfileSaga);
        yield put(ownerSet(data.registeredName, data.registeredNameGeneration));
        if (data.registeredName == null) {
            return;
        }
        const ndata = yield call(getCurrentSaga, data.registeredName, data.registeredNameGeneration);
        const prefix = ndata.nodeUri + (ndata.nodeUri.endsWith("/") ? "" : "/");
        const correct = rootPage.startsWith(prefix) && rootApi.startsWith(prefix);
        yield put(ownerVerified(data.registeredName, data.registeredNameGeneration, ndata.latest, correct));
    } catch (e) {
        yield put(errorThrown(e));
    }
}
